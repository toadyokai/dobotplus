"use strict";(self.webpackChunk_dobot_plus_doc=self.webpackChunk_dobot_plus_doc||[]).push([[6155],{84443:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"api/lua","title":"Lua Processes","description":"daemon.lua","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/api/07-lua.md","sourceDirName":"api","slug":"/api/lua","permalink":"/dobotplus/en/api/lua","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"api","previous":{"title":"Command Line","permalink":"/dobotplus/en/api/cli"}}');var s=r(65723),l=r(78573);const o={},a="Lua Processes",i={},d=[{value:"daemon.lua",id:"daemonlua",level:2},{value:"control.lua",id:"controllua",level:2},{value:"httpAPI.lua",id:"httpapilua",level:2},{value:"Example Response Format",id:"example-response-format",level:3},{value:"userAPI.lua",id:"userapilua",level:2}];function u(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"lua-processes",children:"Lua Processes"})}),"\n",(0,s.jsx)(n.h2,{id:"daemonlua",children:"daemon.lua"}),"\n",(0,s.jsx)(n.p,{children:"This is the main process for the plugin. After successful installation, the controller will automatically invoke this process and execute the contained program."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"local mqtt = require('utils.mqtt')\r\n\r\nlocal function handleInLoop()\r\n  local data = {}\r\n  mqtt.publish(data)\r\nend\r\n\r\nlocal function EventLoop()\r\n  while true do\r\n    handleInLoop()\r\n    Wait(1000)\r\n  end\r\nend\r\n\r\nlocal thread = systhread.create(EventLoop, 1)\r\nthread:wait()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Typically, this file will establish an MQTT connection and broadcast messages every second. Developers can write code in ",(0,s.jsx)(n.code,{children:"handleInLoop"})," to send messages as needed. After the plugin is successfully created, the default broadcast message channel for this plugin is ",(0,s.jsx)(n.code,{children:"<plugin name>Status"}),". The frontend higher-level components will also default to using this channel when establishing a WebSocket connection."]}),"\n",(0,s.jsxs)(n.p,{children:["Developers can view the MQTT implementation in the file located at ",(0,s.jsx)(n.code,{children:".dobot/lua/utils/mqtt.lua"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"controllua",children:"control.lua"}),"\n",(0,s.jsxs)(n.p,{children:["The functions in ",(0,s.jsx)(n.code,{children:"control.lua"})," are the actual control methods for the plugin. These can be used in both ",(0,s.jsx)(n.code,{children:"userAPI.lua"})," and ",(0,s.jsx)(n.code,{children:"httpAPI.lua"})," and form the core module for implementing plugin functionalities."]}),"\n",(0,s.jsx)(n.h2,{id:"httpapilua",children:"httpAPI.lua"}),"\n",(0,s.jsx)(n.p,{children:"This module handles HTTP requests related to the plugin."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local control = require("control")\r\n\r\nlocal httpModule = {}\r\n\r\n--- This function will be called when the plugin is uninstalled\r\nhttpModule.OnUninstall = function()\r\n\r\nend\r\n\r\n--- This function will be called when the plugin is installed\r\nhttpModule.OnInstall = function()\r\n    \r\nend\r\n\r\n--- This function will be called when the plugin is installed, \r\n--- this action will export some HTTP methods for device hotkey binding\r\nhttpModule.OnRegistHotKey = function() \r\n    return {\r\n        press = {"demoMethod1", "demoMethod2"}, \r\n        longPress = {"demoMethod3"}\r\n    }\r\nend\r\n\r\n--- This method will be called when an HTTP request arrives at \r\n--- \'/dobotPlus/[plugin name]_[plugin version]/demoMethod1\'\r\n--- The return value will respond to the HTTP request, and is not necessary\r\n--- @param params table \r\n--- @return string The return value will respond to the HTTP request, and is not necessary\r\n--- @method post\r\nhttpModule.demoMethod1 = function(params)\r\n    return {\r\n        --- Your response data\r\n        --- example: status = true\r\n    }\r\nend\r\n\r\n--- This method will be called when an HTTP request arrives at \r\n--- \'/dobotPlus/[plugin name]_[plugin version]/demoMethod2\'\r\n--- The return value will respond to the HTTP request, and is not necessary\r\n--- @param params table\r\n--- @return string \r\nhttpModule.demoMethod2 = function(params)\r\n    return {\r\n        --- Your response data\r\n        --- example: status = true\r\n    }\r\nend\r\n\r\n--- This method will be called when an HTTP request arrives at \r\n--- \'/dobotPlus/[plugin name]_[plugin version]/demoMethod3\'\r\n--- The return value will respond to the HTTP request, and is not necessary\r\n--- @param params table\r\n--- @return string The return value will respond to the HTTP request, and is not necessary\r\nhttpModule.demoMethod3 = function(params)\r\n    return {\r\n        --- Your response data\r\n        --- example: status = true\r\n    }\r\nend\r\n\r\nreturn httpModule\n'})}),"\n",(0,s.jsxs)(n.p,{children:["After the plugin is successfully installed and the main process is invoked, the controller dynamically assigns a service port, ",(0,s.jsx)(n.code,{children:"pluginPort"}),", to the plugin. When the controller receives a POST request in the following format:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"http://<ip>:<pluginPort>/dobotPlus/<pluginName>_V<pluginVersion>/<methodName>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["It will automatically invoke the corresponding method in ",(0,s.jsx)(n.code,{children:"httpAPI.lua"})," based on the ",(0,s.jsx)(n.code,{children:"methodName"}),". Currently, the controller only responds to POST requests."]}),"\n",(0,s.jsx)(n.h3,{id:"example-response-format",children:"Example Response Format"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Request URL"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"http://192.168.5.1:22011/dobotPlus/test_V1-0-0/demoMethod1"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"httpAPI.lua Module Implementation"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"httpModule.demoMethod1 = function(params)\r\n    return {\r\n        status = true\r\n    }\r\nend\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Request Response"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\r\n    {\r\n        "status": true\r\n    }\r\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"userapilua",children:"userAPI.lua"}),"\n",(0,s.jsxs)(n.p,{children:["The functions in ",(0,s.jsx)(n.code,{children:"userAPI.lua"})," are used in block programming and script programming. When writing these functions, please ensure that the parameter formats are consistent with the configurations for block programming and script programming."]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},78573:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(22155);const s={},l=t.createContext(s);function o(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);