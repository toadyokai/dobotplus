"use strict";(self.webpackChunk_dobot_plus_website=self.webpackChunk_dobot_plus_website||[]).push([[2045],{29609:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=t(65723),s=t(43327);const r={},l="Program Control",o={id:"lua/programControl",title:"Program Control",description:"Command List",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/lua/11-programControl.md",sourceDirName:"lua",slug:"/lua/programControl",permalink:"/dobotplus/en/lua/programControl",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"lua",previous:{title:"Bus Register",permalink:"/dobotplus/en/lua/busRegister"},next:{title:"Tray",permalink:"/dobotplus/en/lua/tray"}},a={},d=[{value:"Command List",id:"command-list",level:2},{value:"Print",id:"print",level:2},{value:"Log",id:"log",level:2},{value:"Wait",id:"wait",level:2},{value:"Pause",id:"pause",level:2},{value:"ResetElapsedTime",id:"resetelapsedtime",level:2},{value:"ElapsedTime",id:"elapsedtime",level:2},{value:"Systime",id:"systime",level:2},{value:"SetGlobalVariable",id:"setglobalvariable",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"program-control",children:"Program Control"})}),"\n",(0,i.jsx)(n.h2,{id:"command-list",children:"Command List"}),"\n",(0,i.jsx)(n.p,{children:"Program control functions are general functions related to the control of program execution."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Command"}),(0,i.jsx)(n.th,{children:"Function"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Print"}),(0,i.jsx)(n.td,{children:"Print debugging information to the console"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Log"}),(0,i.jsx)(n.td,{children:"Output custom logs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Wait"}),(0,i.jsx)(n.td,{children:"Wait for a specified time or until a specified condition is met before continuing to the next command"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Pause"}),(0,i.jsx)(n.td,{children:"Pause script execution"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ResetElapsedTime"}),(0,i.jsx)(n.td,{children:"Start timing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ElapsedTime"}),(0,i.jsx)(n.td,{children:"End timing"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Systime"}),(0,i.jsx)(n.td,{children:"Get the current system time"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SetGlobalVariable"}),(0,i.jsx)(n.td,{children:"Set a global variable"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"print",children:"Print"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"Print(value)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Print debugging information to the console (the command can also be written as ",(0,i.jsx)(n.code,{children:"print"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"}),"\nThe format of the printed variable may differ from the format described in this document, but it represents the same data format. Refer to the format described in this document for understanding and usage."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- For example, if the variable format is {pose={x,y,z,rx,ry,rz}}, the printed format will be similar to:\ntable:0x123abc{\n  [pose] => table:0x123abc{\n  [1] => x\n  [2] => y\n  [3] => z\n  [4] => rx\n  [5] => ry\n  [6] => rz\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Required Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"value: The data to be printed."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- Print the string 'Success' to the console.\nPrint('Success')\n"})}),"\n",(0,i.jsx)(n.h2,{id:"log",children:"Log"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"Log(value)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsx)(n.p,{children:"Output custom-level log information, which can be viewed and exported from the control software's log page."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Required Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"value: Log information."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- Output log information with the content 'test'.\nLog('test')\n"})}),"\n",(0,i.jsx)(n.h2,{id:"wait",children:"Wait"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"Wait(time_ms)\nWait(check_str)\nWait(check_str, timeout_ms)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsx)(n.p,{children:"Wait for a specified time or until a specified condition is met after the robotic arm completes the previous command before continuing to the next command. The maximum waiting time is 2147483647 ms. Setting a parameter value above the maximum will render the command invalid."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Required Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"time_ms"}),": When this parameter is of type integer, it indicates the specified waiting time. If less than or equal to 0, it indicates no wait. (Unit: ms)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"check_str"}),": When this parameter is of type string, it indicates the condition for judgment, and the next command will continue only after the logic evaluates to true."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Optional Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"timeout_ms"}),": Timeout period. If the judgment logic remains false and exceeds this time, the system will continue to execute the next command and return false. If less than or equal to 0, it indicates no wait, resulting in an immediate timeout. If this parameter is not set, it indicates no timeout, and it will keep waiting until the judgment logic becomes true. (Unit: ms)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsx)(n.p,{children:"Returns true if the condition is met and execution continues; returns false if it continues due to timeout."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Wait for 300 ms.\nWait(300)\n-- Continue running when DI1 is ON.\nWait("DI(1) == ON")\n-- Continue running when DO1 is ON and AI(1) is less than 7.\nWait("GetDO(1) == ON and AI(1) < 7")\n-- Execute different business logic based on the state of DI1 within 1 second.\nif (Wait("DI(1) == ON", 1000)) then\n    -- DI1 state is ON\nelse\n    -- DI1 state is OFF and waiting exceeded 1 second\nend\n'})}),"\n",(0,i.jsx)(n.h2,{id:"pause",children:"Pause"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"Pause()\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsx)(n.p,{children:"Pause script execution. It can only be resumed through control software or remote control."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- The robotic arm moves to point P1 and then pauses. It will only continue to point P2 after external control resumes.\nMovJ(P1)\nPause()\nMovJ(P2)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"resetelapsedtime",children:"ResetElapsedTime"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"ResetElapsedTime()\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Start timing after all commands before this command have completed. It must be used together with ",(0,i.jsx)(n.code,{children:"ElapsedTime()"}),", and can be used to calculate execution time."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsxs)(n.p,{children:["Please refer to the example for ",(0,i.jsx)(n.code,{children:"ElapsedTime"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"elapsedtime",children:"ElapsedTime"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"ElapsedTime()\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["End timing and return the time difference. It must be used together with ",(0,i.jsx)(n.code,{children:"ResetElapsedTime()"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsx)(n.p,{children:"The time difference from the start to the end of timing, in milliseconds. It can count up to a maximum of 4294967295 ms (about 49.7 days). After exceeding this time, it will start counting from 0 again."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- Calculate the time taken for the robotic arm to move back and forth 10 times between P1 and P2, and print to the console.\nMovJ(P2)\nResetElapsedTime()\nfor i=1,10 do\n    MovL(P1)\n    MovL(P2)\nend\nprint (ElapsedTime())\n"})}),"\n",(0,i.jsx)(n.h2,{id:"systime",children:"Systime"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"Systime()\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsx)(n.p,{children:"Get the current system time."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,i.jsx)(n.p,{children:"The current system time as a Unix timestamp, converted to milliseconds. This represents the number of milliseconds from Greenwich Mean Time (GMT) January 1, 1970, to the current time, generally used to calculate time differences. To get local time, convert the obtained Greenwich time based on the local time zone."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"-- Get the current system time.\nlocal time1 = Systime() \nprint(time1)  -- > 1686304295963, converted to Beijing time is 2023-06-09 17:51:35 (plus 963 milliseconds)\nlocal time2 = Systime() \nprint(time2)  -- > 1686304421968, converted to Beijing time is 2023-06-09 17:53:41 (plus 968 milliseconds)\n\n-- Calculate the time taken for the robotic arm to move to P1, in milliseconds.\nlocal time1 = Systime()\nMovL(P1)\nlocal time2 = Systime()\nprint(time2 - time1)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"setglobalvariable",children:"SetGlobalVariable"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prototype:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"SetGlobalVariable(key, val)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Description:"})}),"\n",(0,i.jsxs)(n.p,{children:["Set a global variable. It is recommended to use this function to assign values to global variables instead of using ",(0,i.jsx)(n.code,{children:"="}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Required Parameters:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"key: The name of the global variable to be set."}),"\n",(0,i.jsx)(n.li,{children:"val: The value of the global variable to be set. Supported data types include bool, table, string, and number."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Set the global variable g1 to 10.\nSetGlobalVariable("g1", 10)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},43327:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(22155);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);