"use strict";(self.webpackChunk_dobot_plus_website=self.webpackChunk_dobot_plus_website||[]).push([[6133],{42610:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var s=n(65723),r=n(43327);const i={},l="Bus Register",d={id:"lua/busRegister",title:"Bus Register",description:"Command List",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/lua/10-busRegister.md",sourceDirName:"lua",slug:"/lua/busRegister",permalink:"/dobotplus/en/lua/busRegister",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"lua",previous:{title:"Safe Skin",permalink:"/dobotplus/en/lua/safeskin"},next:{title:"Program Control",permalink:"/dobotplus/en/lua/programControl"}},a={},o=[{value:"Command List",id:"command-list",level:2},{value:"GetInputBool",id:"getinputbool",level:2},{value:"GetInputInt",id:"getinputint",level:2},{value:"GetInputFloat",id:"getinputfloat",level:2},{value:"GetOutputBool",id:"getoutputbool",level:2},{value:"GetOutputInt",id:"getoutputint",level:2},{value:"GetOutputFloat",id:"getoutputfloat",level:2},{value:"SetOutputBool",id:"setoutputbool",level:2},{value:"SetOutputInt",id:"setoutputint",level:2},{value:"SetOutputFloat",id:"setoutputfloat",level:2}];function u(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"bus-register",children:"Bus Register"})}),"\n",(0,s.jsx)(t.h2,{id:"command-list",children:"Command List"}),"\n",(0,s.jsx)(t.p,{children:"Bus register commands are used to read and write Profinet or Ethernet/IP bus registers."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note:"}),(0,s.jsx)(t.br,{}),"\n","The Magician E6 does not support this set of commands."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Command"}),(0,s.jsx)(t.th,{children:"Function"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetInputBool"}),(0,s.jsx)(t.td,{children:"Get the boolean value at the specified input register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetInputInt"}),(0,s.jsx)(t.td,{children:"Get the integer value at the specified input register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetInputFloat"}),(0,s.jsx)(t.td,{children:"Get the float value at the specified input register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetOutputBool"}),(0,s.jsx)(t.td,{children:"Get the boolean value at the specified output register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetOutputInt"}),(0,s.jsx)(t.td,{children:"Get the integer value at the specified output register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"GetOutputFloat"}),(0,s.jsx)(t.td,{children:"Get the float value at the specified output register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetOutputBool"}),(0,s.jsx)(t.td,{children:"Set the boolean value at the specified output register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetOutputInt"}),(0,s.jsx)(t.td,{children:"Set the integer value at the specified output register address"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"SetOutputFloat"}),(0,s.jsx)(t.td,{children:"Set the float value at the specified output register address"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"getinputbool",children:"GetInputBool"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"GetInputBool(address)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the boolean value at the specified input register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-63]"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsx)(t.p,{children:"The value at the specified register address, which will be either 0 or 1."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Execute subsequent operations when the value of input register 0 is 1.\nif(GetInputBool(0) == 1) then\n    -- Execute subsequent operations\nend\n"})}),"\n",(0,s.jsx)(t.h2,{id:"getinputint",children:"GetInputInt"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"GetInputInt(address)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the integer value at the specified input register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-23]"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsx)(t.p,{children:"The value at the specified register address, which will be an integer (int32)."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Read the value of input register 1 and assign it to the variable regInt.\nlocal regInt = GetInputInt(1)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"getinputfloat",children:"GetInputFloat"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"GetInputFloat(address)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the float value at the specified input register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-23]"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsx)(t.p,{children:"The value at the specified register address, which will be a single-precision floating-point number (float)."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Read the value of input register 2 and assign it to the variable regFloat.\nlocal regFloat = GetInputFloat(2)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"getoutputbool",children:"GetOutputBool"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"GetOutputBool(address)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the boolean value at the specified output register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-63]"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsx)(t.p,{children:"The value at the specified register address, which will be either 0 or 1."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Execute subsequent operations when the value of output register 0 is 1.\nif(GetOutputBool(0) == 1) then\n    -- Execute subsequent operations\nend\n"})}),"\n",(0,s.jsx)(t.h2,{id:"getoutputint",children:"GetOutputInt"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"GetOutputInt(address)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the integer value at the specified output register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-23]"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsx)(t.p,{children:"The value at the specified register address, which will be an integer (int32)."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Read the value of output register 1 and assign it to the variable regInt.\nlocal regInt = GetOutputInt(1)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"getoutputfloat",children:"GetOutputFloat"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"GetOutputFloat(address)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Gets the float value at the specified output register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-23]"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Returns:"})}),"\n",(0,s.jsx)(t.p,{children:"The value at the specified register address, which will be a single-precision floating-point number (float)."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Read the value of output register 2 and assign it to the variable regFloat.\nlocal regFloat = GetOutputFloat(2)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"setoutputbool",children:"SetOutputBool"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"SetOutputBool(address, value)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Sets the boolean value at the specified output register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-63]"}),"\n",(0,s.jsx)(t.li,{children:"value: The value to be set, supports boolean or 0/1."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Set the value of output register 0 to false.\nSetOutputBool(0, 0)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"setoutputint",children:"SetOutputInt"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"SetOutputInt(address, value)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Sets the integer value at the specified output register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-23]"}),"\n",(0,s.jsx)(t.li,{children:"value: The value to be set, supports integer (int32)."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Set the value of output register 1 to 123.\nSetOutputInt(1, 123)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"setoutputfloat",children:"SetOutputFloat"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Prototype:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"SetOutputFloat(address, value)\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Description:"})}),"\n",(0,s.jsx)(t.p,{children:"Sets the float value at the specified output register address."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Required Parameters:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"address: Register address, valid range [0-23]"}),"\n",(0,s.jsx)(t.li,{children:"value: The value to be set, supports single-precision floating-point numbers (float). Due to the storage mechanism of floating-point numbers (IEEE754), single-precision floating-point numbers can hold about 6 to 7 significant digits (regardless of the decimal point position). Values with significant digits greater than 6 may result in deviations when stored as single-precision floating-point numbers, and the more significant digits there are, the greater the potential deviation."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-lua",children:"-- Set the value of output register 2 to 12.3.\nSetOutputFloat(2, 12.3)\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},43327:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var s=n(22155);const r={},i=s.createContext(r);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);