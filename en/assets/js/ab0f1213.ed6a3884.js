"use strict";(self.webpackChunk_dobot_plus_doc=self.webpackChunk_dobot_plus_doc||[]).push([[6229],{63922:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"tutorials/codespace","title":"Development in GitHub Codespace","description":"Dobot+ plugin development also supports cloud development in GitHub Codespaces.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/tutorials/03-codespace.md","sourceDirName":"tutorials","slug":"/tutorials/codespace","permalink":"/dobotplus/en/tutorials/codespace","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorials","previous":{"title":"Quick Start","permalink":"/dobotplus/en/tutorials/quickstart"},"next":{"title":"Debugging with the Virtual Controller","permalink":"/dobotplus/en/tutorials/vm"}}');var s=t(65723),o=t(78573);const l={},r="Development in GitHub Codespace",c={},a=[{value:"Environment Initialization",id:"environment-initialization",level:2},{value:"Development and Debugging",id:"development-and-debugging",level:2},{value:"Plugin Packaging",id:"plugin-packaging",level:2},{value:"Continue Development",id:"continue-development",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"development-in-github-codespace",children:"Development in GitHub Codespace"})}),"\n",(0,s.jsxs)(n.p,{children:["Dobot+ plugin development also supports cloud development in GitHub Codespaces.",(0,s.jsx)(n.br,{}),"\n","Developers can create a copy of the Dobot+ plugin template and develop in the cloud on their own branch, without the need to set up a local development environment."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(15264).A+"",width:"1920",height:"959"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Dobot+ Plugin Template Repository: ",(0,s.jsx)(n.a,{href:"https://github.com/toadyokai/dobot-plus-template.git",children:"https://github.com/toadyokai/dobot-plus-template.git"})]}),"\n",(0,s.jsxs)(n.li,{children:["Dobot+ Plugin Template NPM Package: ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@dobot-plus/template",children:"https://www.npmjs.com/package/@dobot-plus/template"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Developers can fork the template repository to their own repository, or manually download the Dobot+ plugin template, create a repository locally, and push it to GitHub."}),"\n",(0,s.jsx)(n.p,{children:"Codespaces is a paid service."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(14704).A+"",width:"1920",height:"959"})}),"\n",(0,s.jsxs)(n.p,{children:["Individual developers have a free monthly quota of ",(0,s.jsx)(n.a,{href:"https://docs.github.com/zh/billing/concepts/product-billing/github-codespaces#free-and-billed-use-by-personal-accounts",children:"15GB storage and 120 hours of compute time"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"environment-initialization",children:"Environment Initialization"}),"\n",(0,s.jsxs)(n.p,{children:["Under the Code menu on the page, users can create a Codespaces workspace for the current repository.\n",(0,s.jsx)(n.img,{src:t(42589).A+"",width:"1920",height:"911"})]}),"\n",(0,s.jsx)(n.p,{children:"After the workspace is created, the browser will display the VS Code coding interface."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(1883).A+"",width:"1920",height:"911"})}),"\n",(0,s.jsx)(n.p,{children:"When entering for the first time, a pop-up in the lower right corner will recommend VS Code extensions for the Dobot+ template project. These extensions are helpful for improving development efficiency and are recommended for installation."}),"\n",(0,s.jsxs)(n.p,{children:["During remote container initialization, project dependencies and ",(0,s.jsx)(n.code,{children:"@dobot-plus/cli"})," will be installed automatically. After opening the codespace, developers can check this in the terminal."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"node -v # Check node version\n\npnpm -v # Check pnpm version\n\ndpt -v  # Check dpt development tool version\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Note"})}),"\n",(0,s.jsx)(n.p,{children:"If the automation fails, developers can manually initialize dependencies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install npm dependencies for the current template project\npnpm i\n\n# Install Dobot+ development and debugging tool\nnpm install @dobot-plus/cli --global\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(60984).A+"",width:"1920",height:"911"})}),"\n",(0,s.jsx)(n.p,{children:"After completing the above steps, the basic cloud development environment is set up."}),"\n",(0,s.jsx)(n.p,{children:"Developers can run the following commands in the terminal to check if the tool versions meet the requirements."}),"\n",(0,s.jsx)(n.h2,{id:"development-and-debugging",children:"Development and Debugging"}),"\n",(0,s.jsx)(n.p,{children:"After codespace initialization, run the following in the terminal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dpt dev\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is the same as running"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"dpt dev\n"})}),"\n",(0,s.jsx)(n.p,{children:"locally. Developers should ensure that browser pop-ups are enabled to allow the preview page to open and redirect automatically."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),(0,s.jsx)(n.br,{}),"\n","Debugging in codespace requires connecting to a virtual controller. Developers need to apply for a virtual controller for development and debugging, and update the virtual controller IP in the project's ",(0,s.jsx)(n.code,{children:"dpt.json"})," configuration file."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(95647).A+"",width:"1920",height:"911"})}),"\n",(0,s.jsxs)(n.p,{children:["After the above command executes successfully, the browser will automatically open the plugin preview page as shown below:\n",(0,s.jsx)(n.img,{src:t(23110).A+"",width:"1920",height:"911"})]}),"\n",(0,s.jsx)(n.p,{children:"Developers can debug the interaction and style of the corresponding plugin interface as needed."}),"\n",(0,s.jsx)(n.p,{children:"If the page does not open automatically, developers can manually construct the preview URL based on the current Codespaces URL. The default preview port is 8080."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(92801).A+"",width:"1912",height:"994"})}),"\n",(0,s.jsxs)(n.p,{children:["Modify the part before ",(0,s.jsx)(n.code,{children:".github.dev"})," by adding ",(0,s.jsx)(n.code,{children:"-8080"})," to manually open the preview link in the browser."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(17895).A+"",width:"1908",height:"981"})}),"\n",(0,s.jsx)(n.h2,{id:"plugin-packaging",children:"Plugin Packaging"}),"\n",(0,s.jsx)(n.p,{children:"Run the plugin build command in the Codespaces terminal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"dpt build\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After the build is complete, open the ",(0,s.jsx)(n.code,{children:"output"})," folder in the file menu on the left, right-click the zip file, and select Download. After a short wait, the packaged plugin will be downloaded to your browser's download directory."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(9552).A+"",width:"1920",height:"911"})}),"\n",(0,s.jsx)(n.h2,{id:"continue-development",children:"Continue Development"}),"\n",(0,s.jsx)(n.p,{children:"Using Codespaces requires an internet connection. After completing a development session, if the Codespaces project is not deleted, it will be preserved. Developers can click the corresponding Codespaces to re-enter and continue development."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(42589).A+"",width:"1920",height:"911"})}),"\n",(0,s.jsx)(n.p,{children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/zh/codespaces/about-codespaces/what-are-codespaces",children:"What is GitHub Codespaces?"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.github.com/zh/billing/concepts/product-billing/github-codespaces",children:"Codespaces Billing Rules"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},60984:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/cli-0b657c50e165ec02047616a8a2f47fda.png"},42589:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/codespace-dbb0cd26f75080267eb3ae04d442398e.png"},95647:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/dev-9b2b37ccfbcd7328916b4c0a8c88235d.png"},9552:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/download-9ab9a32b3c62874127b712df048260ea.png"},15264:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/fork-1b8084910cb7b3d1efe87d705825f484.png"},1883:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/install-fa48ee56f3ea3472098112cd081f17c8.png"},14704:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/pay-929d328bdb30e925530e14b07722e064.png"},23110:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/preview-741e16ca2b2553f3d5baa9e6f9653bc5.png"},92801:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/url-49d5681257dbd21bc682464c5049a31a.png"},17895:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/url2-3ed3cb0237504bb9c9d254176668a083.png"},78573:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(22155);const s={},o=i.createContext(s);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);