"use strict";(self.webpackChunk_dobot_plus_website=self.webpackChunk_dobot_plus_website||[]).push([[6895],{85474:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var o=t(65723),i=t(43327);const s={},r="End Effector Hotkey Configuration",c={id:"api/hotkey",title:"End Effector Hotkey Configuration",description:"The robot's end effector can be configured with plugin hotkeys, supporting the 485 communication protocol. To configure hotkeys, we need to define the methods that the hotkeys will execute in lua/httpAPI.lua, and then register these methods with the end effector hotkeys.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/api/04-hotkey.md",sourceDirName:"api",slug:"/api/hotkey",permalink:"/dobotplus/en/api/hotkey",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"api",previous:{title:"Graphical Programming Configuration",permalink:"/dobotplus/en/api/blocky"},next:{title:"Internationalization Configuration",permalink:"/dobotplus/en/api/local"}},d={},h=[{value:"Step 1: Define Hotkey Methods in <code>httpAPI.lua</code>",id:"step-1-define-hotkey-methods-in-httpapilua",level:2},{value:"Explanation of the Code:",id:"explanation-of-the-code",level:3},{value:"Step 2: Configure Hotkeys in <code>Main.json</code>",id:"step-2-configure-hotkeys-in-mainjson",level:2},{value:"Explanation of the Configuration:",id:"explanation-of-the-configuration",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Additional Notes:",id:"additional-notes",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"end-effector-hotkey-configuration",children:"End Effector Hotkey Configuration"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["The robot's end effector can be configured with plugin hotkeys, supporting the 485 communication protocol. To configure hotkeys, we need to define the methods that the hotkeys will execute in ",(0,o.jsx)(n.code,{children:"lua/httpAPI.lua"}),", and then register these methods with the end effector hotkeys."]}),"\n"]}),"\n",(0,o.jsxs)(n.h2,{id:"step-1-define-hotkey-methods-in-httpapilua",children:["Step 1: Define Hotkey Methods in ",(0,o.jsx)(n.code,{children:"httpAPI.lua"})]}),"\n",(0,o.jsxs)(n.p,{children:["First, locate and open the ",(0,o.jsx)(n.code,{children:"lua/httpAPI.lua"})," file. Then, define your hotkey methods as shown below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'local Plugin = {}\n\n-- Define the OnTestPress1 method\nfunction Plugin.OnTestPress1()\n    EcoLog("-------Plugin.OnTestPress1----")\nend\n\n-- Define the OnTestPress2 method\nfunction Plugin.OnTestPress2()\n    EcoLog("-------Plugin.OnTestPress2----")\nend\n\n-- Define the OnTestLongPress method\nfunction Plugin.OnTestLongPress()\n    EcoLog("-------Plugin.OnTestLongPress----")\nend\n\n-- Register hotkey execution\nfunction Plugin.OnRegistHotKey()\n    return {\n        press = {"OnTestPress1", "OnTestPress2"},\n        longPress = {"OnTestLongPress"}\n    }\nend\n\nreturn Plugin\n'})}),"\n",(0,o.jsx)(n.h3,{id:"explanation-of-the-code",children:"Explanation of the Code:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Function Definitions"}),": The methods ",(0,o.jsx)(n.code,{children:"OnTestPress1"}),", ",(0,o.jsx)(n.code,{children:"OnTestPress2"}),", and ",(0,o.jsx)(n.code,{children:"OnTestLongPress"})," are defined to log messages when the respective hotkeys are pressed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Hotkey Registration"}),": The ",(0,o.jsx)(n.code,{children:"OnRegistHotKey"})," function returns a table that specifies which methods correspond to normal presses and long presses of the hotkeys."]}),"\n"]}),"\n",(0,o.jsxs)(n.h2,{id:"step-2-configure-hotkeys-in-mainjson",children:["Step 2: Configure Hotkeys in ",(0,o.jsx)(n.code,{children:"Main.json"})]}),"\n",(0,o.jsxs)(n.p,{children:["Next, open the ",(0,o.jsx)(n.code,{children:"configs/Main.json"})," file and add the hotkey configuration as follows:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "name": "DH",\n    "version": 1,\n    "description": "%{tr_description}",\n    "hotkey": true\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"explanation-of-the-configuration",children:"Explanation of the Configuration:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"name"})}),": The name of your plugin."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"version"})}),": The version number of your plugin."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"description"})}),": A description of your plugin, which can be translated."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.code,{children:"hotkey"})}),": Set to ",(0,o.jsx)(n.code,{children:"true"})," to enable hotkey functionality for the end effector."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(n.p,{children:"By completing the above two steps, you can now set the execution methods for the end effector hotkeys through the hotkey settings page. This allows for quick access to the defined functionalities via the robot's end effector buttons."}),"\n",(0,o.jsx)(n.h3,{id:"additional-notes",children:"Additional Notes:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Make sure the hotkey methods are thoroughly tested to ensure they execute as expected."}),"\n",(0,o.jsx)(n.li,{children:"You can expand this configuration by adding more methods or different types of hotkey triggers if needed."}),"\n",(0,o.jsx)(n.li,{children:"Always check the logs to confirm that the hotkey actions are being registered and executed properly."}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},43327:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(22155);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);