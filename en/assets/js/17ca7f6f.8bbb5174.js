"use strict";(self.webpackChunk_dobot_plus_doc=self.webpackChunk_dobot_plus_doc||[]).push([[3700],{10008:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"tutorials/Examples/tcpip","title":"TCP/IP Control","description":"Please refer to the IO Control Case for the process of creating a plugin. After creating the plugin, please follow the order of userAPI.lua, httpAPI.lua, daemon.lua, and ui/Main.tsx to complete the development of the plugin\'s business logic.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/tutorials/Examples/03-tcpip.md","sourceDirName":"tutorials/Examples","slug":"/tutorials/Examples/tcpip","permalink":"/dobotplus/en/tutorials/Examples/tcpip","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorials","previous":{"title":"Hotkey Control","permalink":"/dobotplus/en/tutorials/Examples/hotkey"},"next":{"title":"Gripper Control","permalink":"/dobotplus/en/tutorials/Examples/grip"}}');var r=t(65723),l=t(78573);const i={},s="TCP/IP Control",a={},c=[{value:"Example Workflow",id:"example-workflow",level:2},{value:"control.lua Module",id:"controllua-module",level:2},{value:"httpAPI.lua Module",id:"httpapilua-module",level:2},{value:".dobot/http/http.ts Module",id:"dobothttphttpts-module",level:2},{value:"ui/Main.tsx Module",id:"uimaintsx-module",level:2},{value:"Running and Debugging",id:"running-and-debugging",level:2},{value:"Building the Plugin",id:"building-the-plugin",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tcpip-control",children:"TCP/IP Control"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Please refer to the ",(0,r.jsx)(n.a,{href:"/dobotplus/en/tutorials/Examples/io",children:"IO Control Case"})," for the process of creating a plugin. After creating the plugin, please follow the order of ",(0,r.jsx)(n.code,{children:"userAPI.lua"}),", ",(0,r.jsx)(n.code,{children:"httpAPI.lua"}),", ",(0,r.jsx)(n.code,{children:"daemon.lua"}),", and ",(0,r.jsx)(n.code,{children:"ui/Main.tsx"})," to complete the development of the plugin's business logic."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-workflow",children:"Example Workflow"}),"\n",(0,r.jsx)(n.mermaid,{value:"graph LR\r\nA[Move Up Button]--\x3e|Click|B(Send Grip HTTP Request)--\x3e|Controller Invokes|C[httpApi Module Method]--\x3e|Parameter Processing, Reference|D[control.lua Module]\r\nA1[Move Down Button]--\x3e|Click|B1(Send Grip HTTP Request)--\x3e|Controller Invokes|C[httpApi Module Method]\r\nD --\x3e|TCP/IP|E[End Effector]"}),"\n",(0,r.jsx)(n.h2,{id:"controllua-module",children:"control.lua Module"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local control = {}\r\n\r\n---@param position string\r\n---@param socket number\r\nfunction control.moveTo(position, socket)\r\n    TCPWrite(socket, "moveTo_absolutePosition"..","..position.."\\n")\r\n    TCPRead(socket, 3 , \'string\')\r\nend\r\n\r\nreturn control\n'})}),"\n",(0,r.jsx)(n.h2,{id:"httpapilua-module",children:"httpAPI.lua Module"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"local httpModule = {}\r\nlocal control = require('control')\r\n\r\nlocal socket = nil\r\n\r\n---Move the lift column\r\nhttpModule.moveTo = function(params)\r\n  if socket then\r\n    control.moveTo(params.position, socket)\r\n  end\r\n  return {\r\n    status = true\r\n  }\r\nend\r\n\r\n---Initialize TCP connection\r\nhttpModule.init = function(params)\r\n  local result = CreateTCPConnection(params.ip, params.port, 10000)\r\n  if result.socket then\r\n    socket = result.socket\r\n  end\r\n  return {\r\n    status = true\r\n  }\r\nend\r\n\r\nreturn httpModule\n"})}),"\n",(0,r.jsx)(n.h2,{id:"dobothttphttpts-module",children:".dobot/http/http.ts Module"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { request } from './axios'\r\n\r\nexport const init = (data: any) => {\r\n  return request({\r\n    url: 'init',\r\n    data\r\n  })\r\n}\r\n\r\nexport const moveTo = (data: any) => {\r\n  return request({\r\n    url: 'moveTo',\r\n    data\r\n  })\r\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"uimaintsx-module",children:"ui/Main.tsx Module"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { Button } from '@dobot-plus/components'\r\nimport { useEffect, useState } from 'react'\r\nimport { http, DobotPlusApp } from '@dobot/index'\r\n\r\nfunction App() {\r\n  const [position, setPosition] = useState(0)\r\n\r\n  function handleButton1Click() {\r\n    http.moveTo({ position: position + 50 })\r\n  }\r\n\r\n  function handleButton2Click() {\r\n    http.moveTo({ position: position - 50 })\r\n  }\r\n\r\n  useEffect(() => {\r\n    http.init({\r\n      ip: '192.168.5.1', // Default IP, update here when actual IP changes\r\n      port: '123' // Enter the actual correct port number here\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <DobotPlusApp>\r\n        <Button type=\"primary\" onClick={handleButton1Click}>\r\n          Move up\r\n        </Button>\r\n        <Button type=\"primary\" onClick={handleButton2Click}>\r\n          Move down\r\n        </Button>\r\n      </DobotPlusApp>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\n"})}),"\n",(0,r.jsx)(n.h2,{id:"running-and-debugging",children:"Running and Debugging"}),"\n",(0,r.jsx)(n.p,{children:"The debugging command for the plugin can perform the following two types of development work:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Debug only the page"}),"\n",(0,r.jsx)(n.li,{children:"Connect to a real device for debugging"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"dpt dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"When executing the above command, the command line will prompt developers whether to connect a real device for testing."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ dpt dev\r\n? Debug lua on real device? Yes\r\n? Please check the device IP: 192.168.5.1 (y/n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Developers need to confirm:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Whether the actual IP of the controller is correct; the default is ",(0,r.jsx)(n.code,{children:"192.168.5.1"})]}),"\n",(0,r.jsx)(n.li,{children:"Whether the SFTP service-related configuration is correct"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For detailed information on the above configurations, please refer to the ",(0,r.jsx)(n.code,{children:"dpt.json"})," configuration file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "ip": "192.168.5.1", // Controller IP\r\n  "pluginPort": 22100\r\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"building-the-plugin",children:"Building the Plugin"}),"\n",(0,r.jsx)(n.p,{children:"After completing the development, debugging, and optimization of the plugin, you can execute the final build work by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"dpt build\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After the program executes successfully, there will be a ",(0,r.jsx)(n.code,{children:"dist"})," folder and an ",(0,r.jsx)(n.code,{children:"output"})," folder in the current directory."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"dist"})," folder contains the plugin code after this build, allowing developers to check the build results."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"output"})," folder contains a compressed ",(0,r.jsx)(n.code,{children:"zip"})," file named in the format ",(0,r.jsx)(n.code,{children:"<plugin_name>-<version_number>.zip"}),", which is the plugin to be imported for actual use on the client."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},78573:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(22155);const r={},l=o.createContext(r);function i(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);