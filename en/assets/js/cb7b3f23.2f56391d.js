"use strict";(self.webpackChunk_dobot_plus_website=self.webpackChunk_dobot_plus_website||[]).push([[5425],{19321:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorials":[{"type":"link","label":"Environment","href":"/dobotplus/en/tutorials/environment","docId":"tutorials/environment","unlisted":false},{"type":"link","label":"Quick Start","href":"/dobotplus/en/tutorials/quickstart","docId":"tutorials/quickstart","unlisted":false},{"type":"category","label":"Examples","items":[{"type":"link","label":"IO Control","href":"/dobotplus/en/tutorials/examples/io","docId":"tutorials/examples/io","unlisted":false},{"type":"link","label":"Hotkey Control","href":"/dobotplus/en/tutorials/examples/hotkey","docId":"tutorials/examples/hotkey","unlisted":false},{"type":"link","label":"TCP/IP Control","href":"/dobotplus/en/tutorials/examples/tcpip","docId":"tutorials/examples/tcpip","unlisted":false},{"type":"link","label":"Gripper Control","href":"/dobotplus/en/tutorials/examples/grip","docId":"tutorials/examples/grip","unlisted":false}],"collapsed":true,"collapsible":true}],"api":[{"type":"link","label":"Basic Configuration","href":"/dobotplus/en/api/install","docId":"api/install","unlisted":false},{"type":"link","label":"Navigation Bar","href":"/dobotplus/en/api/navbar","docId":"api/navbar","unlisted":false},{"type":"link","label":"Script Programming","href":"/dobotplus/en/api/script","docId":"api/script","unlisted":false},{"type":"link","label":"Blocky Programming","href":"/dobotplus/en/api/blocky","docId":"api/blocky","unlisted":false},{"type":"link","label":"Hotkey Configuration","href":"/dobotplus/en/api/hotkey","docId":"api/hotkey","unlisted":false},{"type":"link","label":"Locale","href":"/dobotplus/en/api/local","docId":"api/local","unlisted":false},{"type":"link","label":"Command Line","href":"/dobotplus/en/api/cli","docId":"api/cli","unlisted":false},{"type":"link","label":"Lua Processes","href":"/dobotplus/en/api/lua","docId":"api/lua","unlisted":false}],"components":[{"type":"link","label":"Alert","href":"/dobotplus/en/components/Alert","docId":"components/Alert","unlisted":false},{"type":"link","label":"Button","href":"/dobotplus/en/components/Button","docId":"components/Button","unlisted":false},{"type":"link","label":"Image","href":"/dobotplus/en/components/Image","docId":"components/Image","unlisted":false},{"type":"link","label":"Input","href":"/dobotplus/en/components/Input","docId":"components/Input","unlisted":false},{"type":"link","label":"Radio","href":"/dobotplus/en/components/Radio","docId":"components/Radio","unlisted":false},{"type":"link","label":"Select","href":"/dobotplus/en/components/Select","docId":"components/Select","unlisted":false},{"type":"link","label":"Slider","href":"/dobotplus/en/components/Slider","docId":"components/Slider","unlisted":false},{"type":"link","label":"Status","href":"/dobotplus/en/components/Status","docId":"components/Status","unlisted":false},{"type":"link","label":"Switch","href":"/dobotplus/en/components/Switch","docId":"components/Switch","unlisted":false},{"type":"link","label":"Table","href":"/dobotplus/en/components/Table","docId":"components/Table","unlisted":false}],"lua":[{"type":"link","label":"Basic","href":"/dobotplus/en/lua/grammer","docId":"lua/grammer","unlisted":false},{"type":"link","label":"Operators","href":"/dobotplus/en/lua/operator","docId":"lua/operator","unlisted":false},{"type":"link","label":"Logic","href":"/dobotplus/en/lua/flow","docId":"lua/flow","unlisted":false},{"type":"link","label":"Modbus","href":"/dobotplus/en/lua/modbus","docId":"lua/modbus","unlisted":false},{"type":"link","label":"TCP/UDP","href":"/dobotplus/en/lua/tcp","docId":"lua/tcp","unlisted":false},{"type":"link","label":"End Effector","href":"/dobotplus/en/lua/tool","docId":"lua/tool","unlisted":false},{"type":"link","label":"IO","href":"/dobotplus/en/lua/io","docId":"lua/io","unlisted":false},{"type":"link","label":"Motion","href":"/dobotplus/en/lua/motion","docId":"lua/motion","unlisted":false},{"type":"link","label":"Safe Skin","href":"/dobotplus/en/lua/safeskin","docId":"lua/safeskin","unlisted":false},{"type":"link","label":"Bus Register","href":"/dobotplus/en/lua/busRegister","docId":"lua/busRegister","unlisted":false},{"type":"link","label":"Program Control","href":"/dobotplus/en/lua/programControl","docId":"lua/programControl","unlisted":false},{"type":"link","label":"Tray","href":"/dobotplus/en/lua/tray","docId":"lua/tray","unlisted":false},{"type":"link","label":"Distributed Lock","href":"/dobotplus/en/lua/lock","docId":"lua/lock","unlisted":false}]},"docs":{"api/blocky":{"id":"api/blocky","title":"Blocky Programming","description":"Graphical programming is the core feature of Dobot+. By configuring to generate corresponding blocks, you can reduce the difficulty of script writing. Locate src/config/Blocks.json and customize the blocks you want by specifying parameters.","sidebar":"api"},"api/cli":{"id":"api/cli","title":"Command Line","description":"create","sidebar":"api"},"api/hotkey":{"id":"api/hotkey","title":"Hotkey Configuration","description":"The robot\'s end effector can be configured with plugin hotkeys, supporting the 485 communication protocol. To configure hotkeys, we need to define the methods that the hotkeys will execute in lua/httpAPI.lua, and then register these methods with the end effector hotkeys.","sidebar":"api"},"api/install":{"id":"api/install","title":"Basic Configuration","description":"In Dobot+ resources, each module is configured using json format files to set up page parameters and displays. This chapter will introduce how to configure the installation page\'s related content, including:","sidebar":"api"},"api/local":{"id":"api/local","title":"Locale","description":"Folder Structure","sidebar":"api"},"api/lua":{"id":"api/lua","title":"Lua Processes","description":"daemon.lua","sidebar":"api"},"api/navbar":{"id":"api/navbar","title":"Navigation Bar","description":"After installing the plugin, you can configure a navigation bar for quick operations. Locate configs/Toolbar.json and customize the navigation bar page by specifying parameters.","sidebar":"api"},"api/script":{"id":"api/script","title":"Script Programming","description":"After installing the plugin, you can run the plugin\'s commands in script programming. By configuring, you can add plugin commands to the command menu for quick insertion.","sidebar":"api"},"components/Alert":{"id":"components/Alert","title":"Alert","description":"Demo","sidebar":"components"},"components/Button":{"id":"components/Button","title":"Button","description":"Demo","sidebar":"components"},"components/Image":{"id":"components/Image","title":"Image","description":"Demo","sidebar":"components"},"components/Input":{"id":"components/Input","title":"Input","description":"Demo","sidebar":"components"},"components/Radio":{"id":"components/Radio","title":"Radio","description":"Demo","sidebar":"components"},"components/Select":{"id":"components/Select","title":"Select","description":"Demo","sidebar":"components"},"components/Slider":{"id":"components/Slider","title":"Slider","description":"Demo","sidebar":"components"},"components/Status":{"id":"components/Status","title":"Status","description":"Demo","sidebar":"components"},"components/Switch":{"id":"components/Switch","title":"Switch","description":"Demo","sidebar":"components"},"components/Table":{"id":"components/Table","title":"Table","description":"Demo","sidebar":"components"},"lua/busRegister":{"id":"lua/busRegister","title":"Bus Register","description":"Command List","sidebar":"lua"},"lua/flow":{"id":"lua/flow","title":"Logic","description":"Control flow statements in Lua allow you to dictate the order in which instructions are executed, enabling decision-making and repetitive actions in your programs.","sidebar":"lua"},"lua/grammer":{"id":"lua/grammer","title":"Basic","description":"Example","sidebar":"lua"},"lua/io":{"id":"lua/io","title":"IO","description":"The IO commands are used for reading and writing the mechanical arm\'s system IO states and setting related parameters.","sidebar":"lua"},"lua/lock":{"id":"lua/lock","title":"Distributed Lock","description":"Description","sidebar":"lua"},"lua/modbus":{"id":"lua/modbus","title":"Modbus","description":"Modbus is a communication protocol widely used for connecting industrial electronic devices. The following instructions outline the primary functions available for establishing communication between a Modbus master and slave devices, along with details on how to read from and write to various types of Modbus registers.","sidebar":"lua"},"lua/motion":{"id":"lua/motion","title":"Motion","description":"Command List","sidebar":"lua"},"lua/operator":{"id":"lua/operator","title":"Operators","description":"Arithmetic Operators","sidebar":"lua"},"lua/programControl":{"id":"lua/programControl","title":"Program Control","description":"Command List","sidebar":"lua"},"lua/safeskin":{"id":"lua/safeskin","title":"Safe Skin","description":"Command List","sidebar":"lua"},"lua/tcp":{"id":"lua/tcp","title":"TCP/UDP","description":"This document provides an overview of the functions used for TCP and UDP communication, including how to create network objects, establish connections, read data, and send data.","sidebar":"lua"},"lua/tool":{"id":"lua/tool","title":"End Effector","description":"Command List","sidebar":"lua"},"lua/tray":{"id":"lua/tray","title":"Tray","description":"Command List","sidebar":"lua"},"tutorials/environment":{"id":"tutorials/environment","title":"Environment","description":"The required configuration environment for developing plugins using this toolkit includes NodeJs and Pnpm.","sidebar":"tutorials"},"tutorials/examples/grip":{"id":"tutorials/examples/grip","title":"Gripper Control","description":"This example will complete the development of a suction cup plugin for gripping and releasing workpieces.","sidebar":"tutorials"},"tutorials/examples/hotkey":{"id":"tutorials/examples/hotkey","title":"Hotkey Control","description":"After completing the IO Control Example and debugging, the IO works as expected. Now we can make richer configurations for this plugin.","sidebar":"tutorials"},"tutorials/examples/io":{"id":"tutorials/examples/io","title":"IO Control","description":"This tutorial will implement a plugin to control the suction and release of a vacuum gripper.","sidebar":"tutorials"},"tutorials/examples/tcpip":{"id":"tutorials/examples/tcpip","title":"TCP/IP Control","description":"Please refer to the IO Control Case for the process of creating a plugin. After creating the plugin, please follow the order of userAPI.lua, httpAPI.lua, daemon.lua, and ui/Main.tsx to complete the development of the plugin\'s business logic.","sidebar":"tutorials"},"tutorials/quickstart":{"id":"tutorials/quickstart","title":"Quick Start","description":"This chapter will introduce you to the development process of the Dobot+ ecosystem accessories, including project resource structure and related concepts.","sidebar":"tutorials"}}}}')}}]);